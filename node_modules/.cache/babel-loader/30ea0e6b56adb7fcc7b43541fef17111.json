{"ast":null,"code":"import _classCallCheck from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/Calendar.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"ui/buttons/Button\";\nimport Select from \"ui/form/Select\";\nimport SVGPrevious from \"ui/svg/Previous\";\nimport SVGNext from \"ui/svg/Next\";\nimport styles from \"./calendar.scss\";\nimport DaysOfWeek from \"mod/daysOfWeek/DaysOfWeek\";\nimport CalendarBody from \"mod/calendarBody/CalendarBody\";\nimport CalendarHeader from \"mod/calendarHeader/CalendarHeader\";\nimport EventBody from \"mod/eventBody/EventBody\";\nimport state from \"./Data/state\";\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentMonth: new Date(),\n      currentDate: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"setPreviousMonthButton\",\n    value: function setPreviousMonthButton(currentDate) {\n      currentDate.setMonth(currentDate.getMonth() - 1);\n      this.setState({\n        currentDate: currentDate\n      }); // getPreviousMonthButton();\n\n      console.log(1, currentDate, this.props);\n    }\n  }, {\n    key: \"setNextMonthButton\",\n    value: function setNextMonthButton(currentDate) {\n      currentDate.setMonth(currentDate.getMonth() + 1);\n      this.setState({\n        currentDate: currentDate\n      });\n      console.log(2, currentDate, this.props);\n    }\n  }, {\n    key: \"getPreviousMonthButton\",\n    value: function getPreviousMonthButton(currentDate) {\n      var setPrevMonth = currentDate.getMonth();\n      var newYear = currentDate.getFullYear();\n\n      if (setPrevMonth === 0) {\n        setPrevMonth = 11;\n        newYear--;\n      } else {\n        setPrevMonth = currentDate.getMonth() - 1;\n      }\n\n      return setPrevMonth;\n    }\n  }, {\n    key: \"getNextMonthButton\",\n    value: function getNextMonthButton(currentDate) {\n      var setNextMonth = currentDate.getMonth();\n      var newYear = currentDate.getFullYear();\n\n      if (setNextMonth === 11) {\n        newYear++;\n        setNextMonth = 0;\n      } else {\n        setNextMonth = newDate.getMonth() + 1;\n      }\n\n      return setNextMonth;\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      alert(\"Clicked!\");\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var newDate = new Date();\n      var currentYear = newDate.getFullYear();\n      var currentMonth = newDate.getMonth();\n      state.monthNames[currentMonth] + \" \" + currentYear;\n    }\n  }, {\n    key: \"renderDays\",\n    value: function renderDays() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.calendarHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(CalendarHeader, {\n        monthNames: state.monthNames,\n        renderHeader: this.renderHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Button, {\n        text: \"Month\",\n        onclick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"Week\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"Day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(Select, {\n        options: state.monthChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Select, {\n        options: state.yearChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(SVGPrevious, {\n        width: 20,\n        height: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"Previous\",\n        onclick: function onclick(event) {\n          return _this2.setPreviousMonthButton(_this2.state.currentDate);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"Next\",\n        onclick: function onclick(event) {\n          return _this2.setNextMonthButton(_this2.state.currentDate);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(SVGNext, {\n        width: 20,\n        height: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(DaysOfWeek, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(CalendarBody, {\n        currentDate: this.state.currentDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nCalendar.propTypes = {\n  text: PropTypes.string,\n  optionsState: PropTypes.string\n};\nCalendar.defaultProps = {\n  text: \"defaultText\",\n  optionsState: \"text\"\n};\nexport default Calendar;","map":{"version":3,"sources":["/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/Calendar.jsx"],"names":["React","PropTypes","Button","Select","SVGPrevious","SVGNext","styles","DaysOfWeek","CalendarBody","CalendarHeader","EventBody","state","Calendar","currentMonth","Date","currentDate","setMonth","getMonth","setState","console","log","props","setPrevMonth","newYear","getFullYear","setNextMonth","newDate","alert","currentYear","monthNames","calendarHeader","renderHeader","handleClick","monthChoice","yearChoice","event","setPreviousMonthButton","setNextMonthButton","Component","propTypes","text","string","optionsState","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"ui/buttons/Button\";\nimport Select from \"ui/form/Select\";\nimport SVGPrevious from \"ui/svg/Previous\";\nimport SVGNext from \"ui/svg/Next\";\nimport styles from \"./calendar.scss\";\nimport DaysOfWeek from \"mod/daysOfWeek/DaysOfWeek\";\nimport CalendarBody from \"mod/calendarBody/CalendarBody\";\nimport CalendarHeader from \"mod/calendarHeader/CalendarHeader\";\nimport EventBody from \"mod/eventBody/EventBody\";\nimport state from \"./Data/state\";\n\nclass Calendar extends React.Component {\n  static propTypes = {\n    text: PropTypes.string,\n    optionsState: PropTypes.string\n  };\n\n  static defaultProps = {\n    text: \"defaultText\",\n    optionsState: \"text\"\n  };\n\n  state = {\n    currentMonth: new Date(),\n    currentDate: new Date()\n  };\n\n  setPreviousMonthButton(currentDate) {\n    currentDate.setMonth(currentDate.getMonth() - 1);\n    this.setState({\n      currentDate: currentDate\n    });\n   // getPreviousMonthButton();\n    console.log(1, currentDate, this.props);\n  }\n\n  setNextMonthButton(currentDate) {\n    currentDate.setMonth(currentDate.getMonth() + 1);\n    this.setState({\n      currentDate: currentDate\n    });\n    console.log(2, currentDate, this.props);\n  }\n\n  getPreviousMonthButton(currentDate) {\n    let setPrevMonth = currentDate.getMonth();\n    let newYear = currentDate.getFullYear();\n\n    if (setPrevMonth === 0) {\n      setPrevMonth = 11;\n      newYear--;\n    } else {\n      setPrevMonth = currentDate.getMonth() - 1;\n    }\n    return setPrevMonth;\n  }\n\n  getNextMonthButton(currentDate) {\n    let setNextMonth = currentDate.getMonth();\n    let newYear = currentDate.getFullYear();\n\n    if (setNextMonth === 11) {\n      newYear++;\n      setNextMonth = 0;\n    } else {\n      setNextMonth = newDate.getMonth() + 1;\n    }\n    return setNextMonth;\n  }\n  handleClick() {\n    alert(\"Clicked!\");\n  }\n  renderHeader() {\n    let newDate = new Date();\n    let currentYear = newDate.getFullYear();\n     let currentMonth = newDate.getMonth();\n    state.monthNames[currentMonth] + \" \" + currentYear\n  }\nrenderDays() {\n\n}\n  render() {\n    return (\n      <div>\n        <div className={styles.calendarHeader}>\n          <CalendarHeader monthNames={state.monthNames} \n          renderHeader={this.renderHeader}/>\n        </div>\n        <div>\n          <Button text=\"Month\" onclick={this.handleClick} />\n          <Button text=\"Week\" />\n          <Button text=\"Day\" />\n        </div>\n\n        <Select options={state.monthChoice} />\n        <Select options={state.yearChoice} />\n        <SVGPrevious width={20} height={10} />\n        <Button\n          text=\"Previous\"\n          onclick={event => this.setPreviousMonthButton(this.state.currentDate)}\n        />\n        <Button\n          text=\"Next\"\n          onclick={event => this.setNextMonthButton(this.state.currentDate)}\n        />\n        <SVGNext width={20} height={10} />\n        <DaysOfWeek />\n        <CalendarBody currentDate={this.state.currentDate} />\n        {/* <EventBody />  */}\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}