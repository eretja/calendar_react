{"ast":null,"code":"var _jsxFileName = \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/calendarBody/CalendarBody.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './calendarBody.scss';\nvar newDate = new Date();\nvar date = newDate.getDate();\nvar month = newDate.getMonth() + 1;\nvar year = newDate.getFullYear();\n/**\n * General component description in JSDoc format. Markdown is *supported*.\n */\n\nvar CalendarBody = function CalendarBody(_ref) {\n  var text = _ref.text;\n  var rows = ['test'];\n\n  for (var i = 0; i < 6; i++) {\n    var row = \"row\".concat(i);\n    var cell = ['test'];\n\n    for (var y = 0; y < 7; y++) {\n      var cellID = \"cell\".concat(i, \"-\").concat(y);\n      cell.push(React.createElement(\"td\", {\n        key: cellID,\n        id: cellID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n\n    rows.push(React.createElement(\"tr\", {\n      key: i,\n      id: row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, cell));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, rows))));\n};\n\nCalendarBody.propTypes = {\n  /** Description of prop \"text\". */\n  text: PropTypes.string\n};\nCalendarBody.defaultProps = {\n  text: 'defaultText'\n};\nexport default CalendarBody;","map":{"version":3,"sources":["/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/calendarBody/CalendarBody.jsx"],"names":["React","PropTypes","styles","newDate","Date","date","getDate","month","getMonth","year","getFullYear","CalendarBody","text","rows","i","row","cell","y","cellID","push","propTypes","string","defaultProps"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,IAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,IAAIC,IAAI,GAAGF,OAAO,CAACG,OAAR,EAAX;AACA,IAAIC,KAAK,GAAGJ,OAAO,CAACK,QAAR,KAAqB,CAAjC;AACA,IAAIC,IAAI,GAAGN,OAAO,CAACO,WAAR,EAAX;AAGA;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgB;AAAA,MAAZC,IAAY,QAAZA,IAAY;AAEjC,MAAIC,IAAI,GAAG,CAAE,MAAF,CAAX;;AACA,OAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA8B;AAC1B,QAAIC,GAAG,gBAASD,CAAT,CAAP;AACA,QAAIE,IAAI,GAAG,CAAE,MAAF,CAAX;;AAEA,SAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA8B;AAC1B,UAAIC,MAAM,iBAAUJ,CAAV,cAAeG,CAAf,CAAV;AACAD,MAAAA,IAAI,CAACG,IAAL,CAAW;AAAI,QAAA,GAAG,EAAED,MAAT;AAAiB,QAAA,EAAE,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACH;;AACDL,IAAAA,IAAI,CAACM,IAAL,CAAW;AAAI,MAAA,GAAG,EAAEL,CAAT;AAAY,MAAA,EAAE,EAAEC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBC,IAAtB,CAAX;AACH;;AACD,SAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IADL,CADJ,CADJ,CADJ,CAFJ;AAcH,CA3BD;;AA6BAF,YAAY,CAACS,SAAb,GAAyB;AACrB;AAEAR,EAAAA,IAAI,EAAEX,SAAS,CAACoB;AAHK,CAAzB;AAMAV,YAAY,CAACW,YAAb,GAA4B;AACxBV,EAAAA,IAAI,EAAE;AADkB,CAA5B;AAIA,eAAeD,YAAf","sourcesContent":["\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './calendarBody.scss';\n\n\nlet newDate = new Date();\nlet date = newDate.getDate();\nlet month = newDate.getMonth() + 1;\nlet year = newDate.getFullYear();\n\n\n/**\n * General component description in JSDoc format. Markdown is *supported*.\n */\nconst CalendarBody = ( { text } ) => {\n\n    let rows = [ 'test' ];\n    for ( let i = 0; i < 6; i++ ) {\n        let row = `row${i}`;\n        let cell = [ 'test'\n        ];\n        for ( let y = 0; y < 7; y++ ) {\n            let cellID = `cell${i}-${y}`;\n            cell.push( <td key={cellID} id={cellID}></td> );\n        }\n        rows.push( <tr key={i} id={row}>{cell}</tr> );\n    }\n    return (\n\n        <div className=\"row\">\n            <div>\n                <table>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n    );\n\n};\n\nCalendarBody.propTypes = {\n    /** Description of prop \"text\". */\n\n    text: PropTypes.string\n};\n\nCalendarBody.defaultProps = {\n    text: 'defaultText'\n};\n\nexport default CalendarBody;\n"]},"metadata":{},"sourceType":"module"}