{"ast":null,"code":"import _classCallCheck from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/Calendar.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // import Dummy from '../ui/dummys/Dummy';\n\nimport Button from 'ui/buttons/Button'; //import Button1 from 'ui/buttons/Button.1';\n\nimport Select from 'ui/form/Select';\nimport SVGPrevious from 'ui/svg/Previous';\nimport SVGNext from 'ui/svg/Next';\nimport styles from './calendar.scss';\nimport DaysOfWeek from 'mod/daysOfWeek/DaysOfWeek';\nimport CalendarBody from 'mod/calendarBody/CalendarBody'; //import CalendarBodyTest from 'mod/calendarBody/CalendarBodyTest';\n\nimport CalendarHeader from 'mod/calendarHeader/CalendarHeader';\nimport EventBody from 'mod/eventBody/EventBody'; //import GetCurrentDate from 'mod/calendarBody/CalendarBody';\n\nimport state from './Data/state';\n/**\n * General component description in JSDoc format. Markdown is *supported*.\n */\n//   const setPreviousMonthButton = (currentDate) =>{\n//   }\n//  setCurrentMonthTitle.innerHTML =\n//   calendarModel.months[calendarModel.currentMonth] +\n//   ' ' +\n//   calendarModel.currentYear;\n//     calendarModel.dom.selectYear.value = calendarModel.currentYear;\n//     calendarModel.dom.selectMonth.value = calendarModel.currentMonth;\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentDate: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"setPreviousMonthButton\",\n    value: function setPreviousMonthButton(currentDate) {\n      currentDate.setMonth(currentDate.getMonth() - 1);\n      this.setState({\n        currentDate: currentDate //getPreviousMonthButton(currentDate)\n\n      });\n      console.log(1, currentDate, this.props);\n    }\n  }, {\n    key: \"setNextMonthButton\",\n    value: function setNextMonthButton(currentDate) {\n      currentDate.setMonth(currentDate.getMonth() + 1);\n      this.setState({\n        currentDate: currentDate //getNextMonthButton(currentDate)\n\n      });\n      console.log(2, currentDate, this.props);\n    } //    getPreviousMonthButton (currentDate)  {\n    //         let setPrevMonth = currentDate.getMonth();\n    //         let newYear = currentDate.getFullYear();\n    //         if (setPrevMonth === 0) {\n    //           setPrevMonth = 11;\n    //           newYear--;\n    //         } else {\n    //           setPrevMonth = currentDate.getMonth() - 1;\n    //         }\n    //         return setPrevMonth;\n    //       };\n    //     getNextMonthButton (currentDate) {\n    //         let setNextMonth = currentDate.getMonth();\n    //         let newYear = currentDate.getFullYear();\n    //         if (setNextMonth === 11) {\n    //             newYear++;\n    //             setNextMonth = 0;\n    //           } else {\n    //             setNextMonth = newDate.getMonth() + 1;\n    //           }\n    //         return setNextMonth;\n    //       };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.calendarHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(CalendarHeader, {\n        monthNames: state.monthNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(Select, {\n        options: state.monthChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Select, {\n        options: state.yearChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(SVGPrevious, {\n        width: 20,\n        height: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"Previous\",\n        onclick: function onclick(event) {\n          return _this2.setPreviousMonthButton(_this2.state.currentDate);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"Next\",\n        onclick: function onclick(event) {\n          return _this2.setNextMonthButton(_this2.state.currentDate);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(SVGNext, {\n        width: 20,\n        height: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(DaysOfWeek, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(CalendarBody, {\n        currentDate: this.state.currentDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(EventBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nCalendar.propTypes = {\n  /** Description of prop \"text\". */\n  text: PropTypes.string,\n  optionsState: PropTypes.string\n};\nCalendar.defaultProps = {\n  text: 'defaultText',\n  optionsState: 'text'\n};\nexport default Calendar;","map":{"version":3,"sources":["/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/Calendar.jsx"],"names":["React","PropTypes","Button","Select","SVGPrevious","SVGNext","styles","DaysOfWeek","CalendarBody","CalendarHeader","EventBody","state","Calendar","currentDate","Date","setMonth","getMonth","setState","console","log","props","calendarHeader","monthNames","monthChoice","yearChoice","event","setPreviousMonthButton","setNextMonthButton","Component","propTypes","text","string","optionsState","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import Dummy from '../ui/dummys/Dummy';\nimport Button from 'ui/buttons/Button';\n//import Button1 from 'ui/buttons/Button.1';\nimport Select from 'ui/form/Select';\nimport SVGPrevious from 'ui/svg/Previous';\nimport SVGNext from 'ui/svg/Next';\nimport styles from './calendar.scss';\nimport DaysOfWeek from 'mod/daysOfWeek/DaysOfWeek';\nimport CalendarBody from 'mod/calendarBody/CalendarBody';\n//import CalendarBodyTest from 'mod/calendarBody/CalendarBodyTest';\nimport CalendarHeader from 'mod/calendarHeader/CalendarHeader';\nimport EventBody from 'mod/eventBody/EventBody';\n//import GetCurrentDate from 'mod/calendarBody/CalendarBody';\nimport state from './Data/state';\n\n\n\n/**\n * General component description in JSDoc format. Markdown is *supported*.\n */\n\n//   const setPreviousMonthButton = (currentDate) =>{\n      \n//   }\n    //  setCurrentMonthTitle.innerHTML =\n    //   calendarModel.months[calendarModel.currentMonth] +\n    //   ' ' +\n    //   calendarModel.currentYear;\n    //     calendarModel.dom.selectYear.value = calendarModel.currentYear;\n    //     calendarModel.dom.selectMonth.value = calendarModel.currentMonth;\n\n\n\nclass Calendar extends React.Component {\n    static propTypes = {\n        /** Description of prop \"text\". */\n        text: PropTypes.string,\n        optionsState: PropTypes.string\n    };\n    \n static defaultProps = {\n        text: 'defaultText',\n        optionsState: 'text'\n    };\n\n    state= {\n        currentDate:  new Date()\n    }\n\n    setPreviousMonthButton (currentDate) {\n       currentDate.setMonth(currentDate.getMonth() - 1)\n        this.setState ( {\n          currentDate: currentDate\n          //getPreviousMonthButton(currentDate)\n         }\n         )\n      console.log(1, currentDate, this.props);\n    }\n\n    setNextMonthButton (currentDate) {\n        currentDate.setMonth(currentDate.getMonth() + 1)\n        this.setState ( {\n          currentDate: currentDate\n          //getNextMonthButton(currentDate)\n         }\n  \n         )\n       console.log(2, currentDate, this.props);\n     }\n\n//    getPreviousMonthButton (currentDate)  {\n//         let setPrevMonth = currentDate.getMonth();\n//         let newYear = currentDate.getFullYear();\n      \n//         if (setPrevMonth === 0) {\n//           setPrevMonth = 11;\n//           newYear--;\n//         } else {\n//           setPrevMonth = currentDate.getMonth() - 1;\n//         }\n//         return setPrevMonth;\n//       };\n//     getNextMonthButton (currentDate) {\n//         let setNextMonth = currentDate.getMonth();\n//         let newYear = currentDate.getFullYear();\n      \n//         if (setNextMonth === 11) {\n//             newYear++;\n//             setNextMonth = 0;\n//           } else {\n//             setNextMonth = newDate.getMonth() + 1;\n//           }\n//         return setNextMonth;\n    \n//       };\n      \n    render ()\n{\n    return (\n        <div>\n             <div className={styles.calendarHeader}><CalendarHeader  monthNames={state.monthNames}/></div> \n    \n         {/* <div>\n                <Button text=\"Month\" />\n                <Button text=\"Week\" />\n                <Button text=\"Day\" />\n            </div> */}\n    \n           <Select options={state.monthChoice} />\n            <Select options={state.yearChoice} /> \n            <SVGPrevious width={20} height={10} />\n            <Button text=\"Previous\" onclick={(event)=>this.setPreviousMonthButton (this.state.currentDate)} />\n            <Button text=\"Next\" onclick={(event)=>this.setNextMonthButton (this.state.currentDate)} />\n            <SVGNext width={20} height={10} /> \n             {/* <Button text=\"Previous\" />\n            {/* <Button1 text=\"Previous\" />\n             <Button1 text=\"Next\" />  */} \n            {/* <Button text=\"Next\" />  */}\n            <DaysOfWeek />\n            <CalendarBody currentDate={this.state.currentDate}/>\n          \n    \n           <EventBody /> \n        </div>\n    );\n}\n }\n\n\n\n\n\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}