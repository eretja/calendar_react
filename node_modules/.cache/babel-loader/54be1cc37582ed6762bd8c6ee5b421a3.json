{"ast":null,"code":"var _jsxFileName = \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/calendarHeader/CalendarHeader.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./calendarHeader.scss\";\n\nvar CalendarHeader = function CalendarHeader(props) {\n  var newDate = new Date();\n  var currentYear = newDate.getFullYear();\n  var currentMonth = newDate.getMonth();\n  return React.createElement(\"div\", {\n    className: styles.calendarHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.monthNames[currentMonth] + \" \" + currentYear);\n};\n\nCalendarHeader.propTypes = {\n  optionsState: PropTypes.string\n};\nCalendarHeader.defaultProps = {\n  text: \"defaultText\"\n};\nexport default CalendarHeader;","map":{"version":3,"sources":["/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/calendarHeader/CalendarHeader.jsx"],"names":["React","PropTypes","styles","CalendarHeader","props","newDate","Date","currentYear","getFullYear","currentMonth","getMonth","calendarHeader","monthNames","propTypes","optionsState","string","defaultProps","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAClC,MAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,MAAIC,WAAW,GAAGF,OAAO,CAACG,WAAR,EAAlB;AACA,MAAIC,YAAY,GAAGJ,OAAO,CAACK,QAAR,EAAnB;AACA,SACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAACS,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCP,KAAK,CAACQ,UAAN,CAAiBH,YAAjB,IAAiC,GAAjC,GAAuCF,WADxC,CADF;AAKC,CATD;;AAWAJ,cAAc,CAACU,SAAf,GAA2B;AAEzBC,EAAAA,YAAY,EAAEb,SAAS,CAACc;AAFC,CAA3B;AAKAZ,cAAc,CAACa,YAAf,GAA8B;AAC5BC,EAAAA,IAAI,EAAE;AADsB,CAA9B;AAIA,eAAed,cAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./calendarHeader.scss\";\n\nconst CalendarHeader = (props) => {\nlet newDate = new Date();\nlet currentYear = newDate.getFullYear();\nlet currentMonth = newDate.getMonth();\nreturn (\n  <div className={styles.calendarHeader}> \n  {props.monthNames[currentMonth] + \" \" + currentYear}\n        </div>\n)\n};\n\nCalendarHeader.propTypes = {\n\n  optionsState: PropTypes.string\n};\n\nCalendarHeader.defaultProps = {\n  text: \"defaultText\"\n};\n\nexport default CalendarHeader;\n"]},"metadata":{},"sourceType":"module"}