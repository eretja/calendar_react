{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/calendarBody/CalendarBody.jsx\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./calendarBody.scss\";\nimport Button from \"ui/buttons/Button\";\n\nvar CalendarBody = function CalendarBody(props) {\n  var _this$props$state = _this.props.state,\n      year = _this$props$state.year,\n      month = _this$props$state.month,\n      date = _this$props$state.date; // let newDate = new Date();\n  // let currentMonth = newDate.getMonth();\n  //let currentYear = newDate.getFullYear();\n\n  var getDaysInMonth = function getDaysInMonth(month, year) {\n    return new Date(year, month, 0).getDate();\n  };\n\n  var daysInMonth = getDaysInMonth(month + 1, year);\n  var firstDayOfWeek = new Date(year, month).getDay();\n  var lastDay = new Date(year, month, 0).getDate();\n  var day = 1;\n  var dayOfNextMonth = 0;\n  var cellText;\n\n  var tds = function tds(i, date) {\n    var td = [];\n    var baseDayClass = \"basis class\";\n\n    for (var y = 0; y < 7; y++) {\n      var dayClass = baseDayClass;\n\n      if (i === 0 && y < firstDayOfWeek - 1) {\n        cellText = lastDay - firstDayOfWeek + 2 + y;\n        dayClass += \" \" + styles.calendarNextMonth;\n      } else if (day >= daysInMonth) {\n        dayOfNextMonth++;\n        dayClass += \" \" + styles.calendarNextMonth;\n        cellText = day;\n        day = dayOfNextMonth;\n      } else {\n        cellText = day;\n\n        if (day === date.getDate() && year === date.getFullYear() && month === date.getMonth()) {\n          dayClass += \" \" + styles.actualDate;\n        }\n\n        day++;\n      } //console.log( i, y, dayClass, typeof dayClass );\n\n\n      td.push(React.createElement(\"td\", {\n        key: y,\n        className: dayClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, cellText));\n    }\n\n    return td;\n  };\n\n  var trs = function trs(date) {\n    var tr = [];\n\n    for (var i = 0; i < 5; i++) {\n      tr.push(React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, tds(i, date)));\n    }\n\n    return tr;\n  }; //console.log( 'new Date()', new Date(), typeof new Date(), new Date().toISOString() );\n\n\n  return React.createElement(\"div\", {\n    className: \"calendarBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, trs(props.date)))));\n}; //}\n\n\nCalendarBody.propTypes = {\n  /** Description of prop \"text\". */\n  text: PropTypes.string\n};\nCalendarBody.defaultProps = {\n  text: \"\"\n};\nexport default CalendarBody;","map":{"version":3,"sources":["/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/calendarBody/CalendarBody.jsx"],"names":["React","PropTypes","styles","Button","CalendarBody","props","state","year","month","date","getDaysInMonth","Date","getDate","daysInMonth","firstDayOfWeek","getDay","lastDay","day","dayOfNextMonth","cellText","tds","i","td","baseDayClass","y","dayClass","calendarNextMonth","getFullYear","getMonth","actualDate","push","trs","tr","propTypes","text","string","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./calendarBody.scss\";\nimport Button from \"ui/buttons/Button\";\n\nconst CalendarBody = (props) => {\n  let {year,month,date} = this.props.state\n // let newDate = new Date();\n // let currentMonth = newDate.getMonth();\n  //let currentYear = newDate.getFullYear();\n\n  let getDaysInMonth = function(month, year) {\n    return new Date(year, month, 0).getDate();\n  };\n  let daysInMonth = getDaysInMonth(month + 1, year);\n\n  let firstDayOfWeek = new Date(year, month).getDay();\n\n  let lastDay = new Date(year, month, 0).getDate();\n  let day = 1;\n  let dayOfNextMonth = 0;\n  let cellText;\n  const tds = (i, date) => {\n    let td = [];\n    const baseDayClass = \"basis class\";\n    for (let y = 0; y < 7; y++) {\n      let dayClass = baseDayClass;\n      if (i === 0 && y < firstDayOfWeek - 1) {\n        cellText = lastDay - firstDayOfWeek + 2 + y;\n        dayClass += \" \" + styles.calendarNextMonth;\n      } else if (day >= daysInMonth) {\n        dayOfNextMonth++;\n        dayClass += \" \" + styles.calendarNextMonth;\n        cellText = day;\n        day = dayOfNextMonth;\n      } else {\n        cellText = day;\n        if (\n          day === date.getDate() &&\n          year === date.getFullYear() &&\n          month === date.getMonth()\n        ) {\n          dayClass += \" \" + styles.actualDate;\n        }\n        day++;\n      }\n      //console.log( i, y, dayClass, typeof dayClass );\n      td.push(\n        <td key={y} className={dayClass}>\n          {cellText}\n        </td>\n      );\n    }\n    return td;\n  };\n  const trs = date => {\n    let tr = [];\n    for (let i = 0; i < 5; i++) {\n      tr.push(<tr key={i}>{tds(i, date)}</tr>);\n    }\n    return tr;\n  };\n\n  //console.log( 'new Date()', new Date(), typeof new Date(), new Date().toISOString() );\n\n  return (\n    <div className=\"calendarBody\">\n      <div>\n        <table>\n          <tbody>{trs(props.date)}</tbody>\n        </table>\n      </div>\n      {/* <Button text='Add an Event'/>  */}\n    </div>\n  );\n};\n//}\n\nCalendarBody.propTypes = {\n  /** Description of prop \"text\". */\n\n  text: PropTypes.string\n};\n\nCalendarBody.defaultProps = {\n  text: \"\"\n};\n\nexport default CalendarBody;\n"]},"metadata":{},"sourceType":"module"}