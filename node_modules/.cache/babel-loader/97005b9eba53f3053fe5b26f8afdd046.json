{"ast":null,"code":"var _jsxFileName = \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/ui/buttons/Button.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './buttons.scss'; //import ButtonPrev from './PrevNextButtons/ButtonPrev';\n\n/**\n * General component description in JSDoc format. Markdown is *supported*.\n */\n\nvar Button = function Button(_ref) {\n  var text = _ref.text,\n      onclick = _ref.onclick;\n  return React.createElement(\"button\", {\n    onClick: function onClick() {\n      return alert(text);\n    },\n    className: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, text);\n};\n\nButton.propTypes = {\n  /** Description of prop \"text\". */\n  text: PropTypes.string\n};\nButton.defaultProps = {\n  text: 'defaultText'\n};\nexport default Button;","map":{"version":3,"sources":["/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/ui/buttons/Button.jsx"],"names":["React","PropTypes","styles","Button","text","onclick","alert","button","propTypes","string","defaultProps"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB,C,CACA;;AAGA;;;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAIC,IAAJ,QAAIA,IAAJ;AAAA,MAAUC,OAAV,QAAUA,OAAV;AAAA,SACX;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAKC,KAAK,CAACF,IAAD,CAAV;AAAA,KAAjB;AAAmC,IAAA,SAAS,EAAEF,MAAM,CAACK,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMH,IAFN,CADW;AAAA,CAAf;;AAQAD,MAAM,CAACK,SAAP,GAAmB;AACf;AACAJ,EAAAA,IAAI,EAAEH,SAAS,CAACQ;AAFD,CAAnB;AAKAN,MAAM,CAACO,YAAP,GAAsB;AAClBN,EAAAA,IAAI,EAAE;AADY,CAAtB;AAIA,eAAeD,MAAf","sourcesContent":["\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './buttons.scss';\n//import ButtonPrev from './PrevNextButtons/ButtonPrev';\n\n\n/**\n * General component description in JSDoc format. Markdown is *supported*.\n */\nconst Button = ( { text, onclick } ) => (\n    <button onClick={()=> alert(text)} className={styles.button}>\n\n        { text }\n        \n    </button>\n);\n\nButton.propTypes = {\n    /** Description of prop \"text\". */\n    text: PropTypes.string\n};\n\nButton.defaultProps = {\n    text: 'defaultText'\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}