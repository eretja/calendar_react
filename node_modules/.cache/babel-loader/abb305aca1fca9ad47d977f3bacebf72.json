{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/calendarBody/CalendarBody.jsx\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './calendarBody.scss';\nvar newDate = new Date();\nvar date = newDate.getDate();\nvar month = newDate.getMonth() + 1;\nvar year = newDate.getFullYear();\n/**\n * General component description in JSDoc format. Markdown is *supported*.\n */\n\nvar CalendarBody = function CalendarBody(_ref) {\n  var text = _ref.text;\n\n  /**  const tds = ()  => {\n      let td = [];\n      let tr = [];\n        for ( let i = 0; i < 6; i++ ) {\n          tr.push( <tr key={i}>rows</tr> );\n            for ( let y = 0; y < 7; y++ ) {\n              td.push( <td key={y}>cells</td> );\n            }\n        }\n      return tr;\n  };\n    return (\n       <div className=\"row\">\n          <div>\n              <table>\n                  <tbody>\n                      <tr>\n                          <td>\n                              { tds( ) }\n                          </td>\n                      </tr>\n                  </tbody>\n              </table>\n          </div>\n      </div>\n  );\n  };\n  */\n  var cols = [],\n      // [{key, label}]\n  data = [];\n\n  if (_this.props.rows.length > 0) {\n    return data.map(function (item) {\n      var cells = cols.map(function (colData) {\n        return React.createElement(\"td\", {\n          key: colData.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \" \", item[colData.key], \" \");\n      });\n      return React.createElement(\"tr\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \" \", cells, \" \");\n    });\n  }\n\n  render();\n\n  var headers = _this.generateHeaders();\n\n  var rows = _this.generateRows();\n\n  return React.createElement(\"table\", {\n    className: \"table table-hove\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, headers)), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, rows));\n};\n\nCalendarBody.propTypes = {\n  /** Description of prop \"text\". */\n  text: PropTypes.string\n};\nCalendarBody.defaultProps = {\n  text: 'defaultText'\n};\nexport default CalendarBody;","map":{"version":3,"sources":["/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/calendarBody/CalendarBody.jsx"],"names":["React","PropTypes","styles","newDate","Date","date","getDate","month","getMonth","year","getFullYear","CalendarBody","text","cols","data","props","rows","length","map","item","cells","colData","key","id","render","headers","generateHeaders","generateRows","propTypes","string","defaultProps"],"mappings":";;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,IAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,IAAIC,IAAI,GAAGF,OAAO,CAACG,OAAR,EAAX;AACA,IAAIC,KAAK,GAAGJ,OAAO,CAACK,QAAR,KAAqB,CAAjC;AACA,IAAIC,IAAI,GAAGN,OAAO,CAACO,WAAR,EAAX;AAGA;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgB;AAAA,MAAZC,IAAY,QAAZA,IAAY;;AAEjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,MAAIC,IAAI,GAAG,EAAX;AAAA,MAAgB;AACZC,EAAAA,IAAI,GAAG,EADX;;AAEA,MAAK,KAAI,CAACC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,GAAyB,CAA9B,EAAkC;AAC9B,WAAOH,IAAI,CAACI,GAAL,CAAU,UAAUC,IAAV,EAAiB;AAC9B,UAAIC,KAAK,GAAGP,IAAI,CAACK,GAAL,CAAU,UAAUG,OAAV,EAAoB;AACtC,eAAO;AAAI,UAAA,GAAG,EAAEA,OAAO,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwBH,IAAI,CAACE,OAAO,CAACC,GAAT,CAA5B,MAAP;AACH,OAFW,CAAZ;AAGA,aAAO;AAAI,QAAA,GAAG,EAAEH,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAoBH,KAApB,MAAP;AACH,KALM,CAAP;AAMH;;AAGDI,EAAAA,MAAM;;AACN,MAAIC,OAAO,GAAG,KAAI,CAACC,eAAL,EAAd;;AACA,MAAIV,IAAI,GAAG,KAAI,CAACW,YAAL,EAAX;;AAEA,SACI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OADL,CADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,IADL,CANJ,CADJ;AAaH,CA1ED;;AA2EAL,YAAY,CAACiB,SAAb,GAAyB;AACrB;AAEAhB,EAAAA,IAAI,EAAEX,SAAS,CAAC4B;AAHK,CAAzB;AAMAlB,YAAY,CAACmB,YAAb,GAA4B;AACxBlB,EAAAA,IAAI,EAAE;AADkB,CAA5B;AAIA,eAAeD,YAAf","sourcesContent":["\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './calendarBody.scss';\n\n\nlet newDate = new Date();\nlet date = newDate.getDate();\nlet month = newDate.getMonth() + 1;\nlet year = newDate.getFullYear();\n\n\n/**\n * General component description in JSDoc format. Markdown is *supported*.\n */\nconst CalendarBody = ( { text } ) => {\n\n    /**  const tds = ()  => {\n        let td = [];\n        let tr = [];\n\n\n        for ( let i = 0; i < 6; i++ ) {\n            tr.push( <tr key={i}>rows</tr> );\n\n\n            for ( let y = 0; y < 7; y++ ) {\n                td.push( <td key={y}>cells</td> );\n\n\n            }\n\n\n        }\n        return tr;\n    };\n\n\n    return (\n\n        <div className=\"row\">\n            <div>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                { tds( ) }\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\n\n*/\n\n\n    let cols = [],  // [{key, label}]\n        data = [];\n    if ( this.props.rows.length > 0 ) {\n        return data.map( function( item ) {\n            var cells = cols.map( function( colData ) {\n                return <td key={colData.key}> {item[colData.key]} </td>;\n            } );\n            return <tr key={item.id}> {cells} </tr>;\n        } );\n    }\n\n\n    render();\n    let headers = this.generateHeaders();\n    let rows = this.generateRows();\n\n    return (\n        <table className=\"table table-hove\">\n            <thead>\n                <tr>\n                    {headers}\n                </tr>\n            </thead>\n            <tbody>\n                {rows}\n            </tbody>\n\n        </table>\n    );\n};\nCalendarBody.propTypes = {\n    /** Description of prop \"text\". */\n\n    text: PropTypes.string\n};\n\nCalendarBody.defaultProps = {\n    text: 'defaultText'\n};\n\nexport default CalendarBody;\n"]},"metadata":{},"sourceType":"module"}