{"ast":null,"code":"import _classCallCheck from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/Calendar.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"ui/buttons/Button\";\nimport Select from \"ui/form/Select\";\nimport SVGPrevious from \"ui/svg/Previous\";\nimport SVGNext from \"ui/svg/Next\";\nimport styles from \"./calendar.scss\";\nimport DaysOfWeek from \"mod/daysOfWeek/DaysOfWeek\";\nimport CalendarBody from \"mod/calendarBody/CalendarBody\";\nimport CalendarHeader from \"mod/calendarHeader/CalendarHeader\";\nimport EventBody from \"mod/eventBody/EventBody\";\nimport state from \"./Data/state\";\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentDate: new Date()\n    };\n\n    _this.calendarBody = function () {\n      var _this$state = _this.state,\n          year = _this$state.year,\n          month = _this$state.month,\n          date = _this$state.date;\n      var calendarWeeks = [],\n          calendarDays = []; //get first day of April\n      //monthIndex start from index 0, 3=April\n\n      var firstDay = new Date(year, month).getDay(); //get last day of April\n      //etc: month 4=May, date 0 = one day before May = last day of April\n\n      var daysInMonth = new Date(year, month + 1, 0).getDate(); //get how many weeks\n\n      var totalWeeks = Math.ceil((daysInMonth + firstDay) / 7);\n      var dates = 1;\n\n      for (var i = 0; i < totalWeeks * 7; i++) {\n        if (i < firstDay || i >= daysInMonth + firstDay) {\n          calendarDays.push(null);\n        } else {\n          calendarDays.push(dates);\n          dates++;\n        }\n      } //splice arry into weeks for .map func later\n\n\n      for (var i = 0; i < calendarDays.length; i++) {\n        calendarWeeks.push(calendarDays.splice(0, 7));\n      }\n\n      _this.setState({\n        calendarDays: calendarDays,\n        calendarWeeks: calendarWeeks\n      });\n    };\n\n    _this.onClick = function (action) {\n      var year = _this.state.year;\n      var month = _this.state.month;\n      month = month + action;\n\n      if (month < 0) {\n        year += action;\n        month = 11;\n      } else if (month > 11) {\n        year += action;\n        month = 0;\n      }\n\n      _this.setState({\n        month: month,\n        year: year\n      }, function () {\n        _this.calendarBody();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"setPreviousMonthButton\",\n    value: function setPreviousMonthButton(currentDate) {\n      currentDate.setMonth(currentDate.getMonth() - 1);\n      this.setState({\n        currentDate: currentDate\n      }); // getPreviousMonthButton();\n\n      console.log(1, currentDate, this.props);\n    }\n  }, {\n    key: \"setNextMonthButton\",\n    value: function setNextMonthButton(currentDate) {\n      currentDate.setMonth(currentDate.getMonth() + 1);\n      this.setState({\n        currentDate: currentDate\n      });\n      console.log(2, currentDate, this.props);\n    }\n  }, {\n    key: \"getPreviousMonthButton\",\n    value: function getPreviousMonthButton(currentDate) {\n      this.setState({\n        currentDate: currentDate\n      });\n      var setPrevMonth = this.currentDate.getMonth();\n      var newYear = this.currentDate.getFullYear();\n\n      if (setPrevMonth === 0) {\n        setPrevMonth = 11;\n        newYear--;\n      } else {\n        setPrevMonth = currentDate.getMonth() - 1;\n      }\n\n      return setPrevMonth;\n    }\n  }, {\n    key: \"getNextMonthButton\",\n    value: function getNextMonthButton(currentDate) {\n      this.setState({\n        currentDate: currentDate\n      });\n      var setNextMonth = this.currentDate.getMonth();\n      var newYear = this.currentDate.getFullYear();\n\n      if (setNextMonth === 11) {\n        newYear++;\n        setNextMonth = 0;\n      } else {\n        setNextMonth = newDate.getMonth() + 1;\n      }\n\n      return setNextMonth;\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      alert(\"Clicked!\");\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var currentYear = currentDate.getFullYear();\n      var currentMonth = currentDate.getMonth();\n      this.setState({\n        currentDate: currentDate\n      });\n      state.monthNames[currentMonth] + \" \" + currentYear;\n    }\n  }, {\n    key: \"renderDays\",\n    value: function renderDays() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.calendarHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(CalendarHeader, {\n        state: state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Button, {\n        text: \"Month\",\n        onclick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"Week\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"Day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), React.createElement(Select, {\n        options: state.monthChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(Select, {\n        options: state.yearChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(SVGPrevious, {\n        width: 20,\n        height: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"Previous\",\n        onclick: function onclick(event) {\n          return _this2.setPreviousMonthButton(_this2.state.currentDate);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Button, {\n        text: \"Next\",\n        onclick: function onclick(event) {\n          return _this2.setNextMonthButton(_this2.state.currentDate);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(SVGNext, {\n        width: 20,\n        height: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(DaysOfWeek, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(CalendarBody, {\n        currentDate: this.state.currentDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nCalendar.propTypes = {\n  text: PropTypes.string,\n  optionsState: PropTypes.string\n};\nCalendar.defaultProps = {\n  text: \"defaultText\",\n  optionsState: \"text\"\n};\nexport default Calendar;","map":{"version":3,"sources":["/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/Calendar.jsx"],"names":["React","PropTypes","Button","Select","SVGPrevious","SVGNext","styles","DaysOfWeek","CalendarBody","CalendarHeader","EventBody","state","Calendar","currentDate","Date","calendarBody","year","month","date","calendarWeeks","calendarDays","firstDay","getDay","daysInMonth","getDate","totalWeeks","Math","ceil","dates","i","push","length","splice","setState","onClick","action","setMonth","getMonth","console","log","props","setPrevMonth","newYear","getFullYear","setNextMonth","newDate","alert","currentYear","currentMonth","monthNames","calendarHeader","handleClick","monthChoice","yearChoice","event","setPreviousMonthButton","setNextMonthButton","Component","propTypes","text","string","optionsState","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"ui/buttons/Button\";\nimport Select from \"ui/form/Select\";\nimport SVGPrevious from \"ui/svg/Previous\";\nimport SVGNext from \"ui/svg/Next\";\nimport styles from \"./calendar.scss\";\nimport DaysOfWeek from \"mod/daysOfWeek/DaysOfWeek\";\nimport CalendarBody from \"mod/calendarBody/CalendarBody\";\nimport CalendarHeader from \"mod/calendarHeader/CalendarHeader\";\nimport EventBody from \"mod/eventBody/EventBody\";\nimport state from \"./Data/state\";\n\nclass Calendar extends React.Component {\n  static propTypes = {\n    text: PropTypes.string,\n    optionsState: PropTypes.string\n  };\n\n  static defaultProps = {\n    text: \"defaultText\",\n    optionsState: \"text\"\n  };\n\n  state = {\n    currentDate: new Date()\n  };\n\n  setPreviousMonthButton(currentDate) {\n    currentDate.setMonth(currentDate.getMonth() - 1);\n    this.setState({\n      currentDate: currentDate\n    });\n\n    // getPreviousMonthButton();\n    console.log(1, currentDate, this.props);\n  }\n\n  setNextMonthButton(currentDate) {\n    currentDate.setMonth(currentDate.getMonth() + 1);\n    this.setState({\n      currentDate: currentDate\n    });\n    console.log(2, currentDate, this.props);\n  }\n\n  getPreviousMonthButton(currentDate) {\n    this.setState({\n      currentDate: currentDate\n    });\n    let setPrevMonth = this.currentDate.getMonth();\n    let newYear = this.currentDate.getFullYear();\n\n    if (setPrevMonth === 0) {\n      setPrevMonth = 11;\n      newYear--;\n    } else {\n      setPrevMonth = currentDate.getMonth() - 1;\n    }\n    return setPrevMonth;\n  }\n\n  getNextMonthButton(currentDate) {\n    this.setState({\n      currentDate: currentDate\n    });\n    let setNextMonth = this.currentDate.getMonth();\n    let newYear = this.currentDate.getFullYear();\n\n    if (setNextMonth === 11) {\n      newYear++;\n      setNextMonth = 0;\n    } else {\n      setNextMonth = newDate.getMonth() + 1;\n    }\n    return setNextMonth;\n  }\n  handleClick() {\n    alert(\"Clicked!\");\n  }\n\ncalendarBody = () => {\n    let {year,month,date} = this.state\n    const calendarWeeks = [], calendarDays = []\n    //get first day of April\n    //monthIndex start from index 0, 3=April\n    let firstDay = new Date(year, month).getDay();\n    //get last day of April\n    //etc: month 4=May, date 0 = one day before May = last day of April\n    let daysInMonth = new Date(year, month+1, 0).getDate();\n    //get how many weeks\n    let totalWeeks = Math.ceil((daysInMonth + firstDay) / 7)    \n   \n    let dates = 1\n    for(var i = 0; i < totalWeeks*7; i++){   \n      if(i < firstDay || i >= daysInMonth + firstDay) {\n        calendarDays.push(null)     \n      } else {\n        calendarDays.push(dates)\n        dates++\n      }\n    }   \n    //splice arry into weeks for .map func later\n    for(var i = 0; i < calendarDays.length; i++){ \n      calendarWeeks.push(calendarDays.splice(0, 7));\n    }\n    \n    this.setState({\n      calendarDays, \n      calendarWeeks     \n    })    \n  }\n  onClick = (action) =>{\n    let year = this.state.year\n    let month = this.state.month\n    month = month + action\n    \n    \n    if(month < 0){\n      year+=action\n      month = 11\n    }else if(month > 11){\n      year+=action\n      month = 0\n    }\n    this.setState({\n      month,\n      year\n    },\n    () =>{\n      this.calendarBody()\n    })    \n  }\n\n\n\n\n  renderHeader() {\n    let currentYear = currentDate.getFullYear();\n    let currentMonth = currentDate.getMonth();\n    this.setState({\n      currentDate: currentDate\n    });\n    state.monthNames[currentMonth] + \" \" + currentYear;\n  }\n  renderDays() {}\n  render() {\n    return (\n      <div>\n        <div className={styles.calendarHeader}>\n          <CalendarHeader state={state} />\n        </div>\n        <div>\n          <Button text=\"Month\" onclick={this.handleClick} />\n          <Button text=\"Week\" />\n          <Button text=\"Day\" />\n        </div>\n\n        <Select options={state.monthChoice} />\n        <Select options={state.yearChoice} />\n        <SVGPrevious width={20} height={10} />\n        <Button\n          text=\"Previous\"\n          onclick={event => this.setPreviousMonthButton(this.state.currentDate)}\n        />\n        <Button\n          text=\"Next\"\n          onclick={event => this.setNextMonthButton(this.state.currentDate)}\n        />\n        <SVGNext width={20} height={10} />\n        <DaysOfWeek />\n        <CalendarBody currentDate={this.state.currentDate} />\n        {/* <EventBody />  */}\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}