{"ast":null,"code":"import _toConsumableArray from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/calendarBody/CalendarBody.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './calendarBody.scss';\n/**\n * General component description in JSDoc format. Markdown is *supported*.\n */\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentDate: moment().date(1),\n      label: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n      setOfDate: []\n    };\n\n    _this.isToday = function (date) {\n      return moment().isSame(date, 'd');\n    };\n\n    _this.currentMonth = function (date) {\n      var current = moment(date);\n      var monthNumber = current.clone().month();\n      var setOfDate = [];\n\n      while (current.month() === monthNumber) {\n        setOfDate.push(current.clone());\n        current.add(1, 'day');\n      }\n\n      return setOfDate;\n    };\n\n    _this.previousMonth = function (date) {\n      var prev = moment(date);\n      var dayOfWeek = prev.day();\n      var setOfDate = [];\n      prev.subtract(dayOfWeek + 1, 'day');\n\n      for (var i = dayOfWeek; i > 0; i--) {\n        setOfDate.push(prev.add(1, 'day').clone());\n      }\n\n      return setOfDate;\n    };\n\n    _this.nextMonth = function (date) {\n      var next = moment(date).add(1, 'month').subtract(1, 'day');\n      var dayOfWeek = next.day();\n      var setOfDate = [];\n\n      for (var i = dayOfWeek; i < 6; i++) {\n        setOfDate.push(next.add(1, 'day').clone());\n      }\n\n      return setOfDate;\n    };\n\n    _this.createItem = function () {\n      var current = _this.currentMonth(_this.state.currentDate);\n\n      var prev = _this.previousMonth(_this.state.currentDate);\n\n      var next = _this.nextMonth(_this.state.currentDate);\n\n      var sum = [].concat(_toConsumableArray(prev), _toConsumableArray(current), _toConsumableArray(next));\n\n      _this.setState({\n        setOfDate: sum\n      });\n    };\n\n    _this.changeMonth = function (step) {\n      var currentDate = _this.state.currentDate.clone();\n\n      if (step < 0) {\n        currentDate.subtract(1, 'month');\n      } else {\n        currentDate.add(1, 'month');\n      }\n\n      _this.setState({\n        currentDate: currentDate\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createItem();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProp, prevState) {\n      if (prevState.currentDate.format('YYYY/MM/DD') != this.state.currentDate.format('YYYY/MM/DD')) {\n        this.createItem();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.changeMonth(-1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"prev\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.changeMonth(1);\n        },\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"next\"), React.createElement(\"p\", {\n        className: \"indicator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.currentDate.format('MMMM-YY'), \" \"), React.createElement(\"div\", {\n        className: \"calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.label.map(function (l) {\n        return React.createElement(\"div\", {\n          className: \"calendar__item calendar__item--header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, l);\n      }), this.state.setOfDate.map(function (day) {\n        return React.createElement(\"div\", {\n          className: classNames({\n            'calendar__item': true,\n            'calendar__item--today': _this2.isToday(day)\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, day.format('D'));\n      })));\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nReactDOM.render(React.createElement(Calendar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/kkoshulynska/work/SANDBOX/repo-calender/khrystyna-calendar/src/components/mod/calendarBody/CalendarBody.jsx"],"names":["React","PropTypes","styles","Calendar","state","currentDate","moment","date","label","setOfDate","isToday","isSame","currentMonth","current","monthNumber","clone","month","push","add","previousMonth","prev","dayOfWeek","day","subtract","i","nextMonth","next","createItem","sum","setState","changeMonth","step","prevProp","prevState","format","map","l","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './calendarBody.scss';\n\n\n/**\n * General component description in JSDoc format. Markdown is *supported*.\n */\nclass Calendar extends React.Component {\n\n    state = {\n        currentDate: moment().date( 1 ),\n        label: [ 'S', 'M', 'T', 'W', 'T', 'F', 'S' ],\n        setOfDate: []\n    }\n\n    isToday = date => {\n        return moment().isSame( date, 'd' );\n    }\n\n    currentMonth = date => {\n        let current = moment( date );\n\n        const monthNumber = current.clone().month();\n        const setOfDate = [];\n\n\n        while ( current.month() === monthNumber ) {\n            setOfDate.push( current.clone() );\n            current.add( 1, 'day' );\n        }\n\n        return setOfDate;\n    };\n\n    previousMonth = date => {\n        let prev = moment( date );\n\n        const dayOfWeek = prev.day();\n        const setOfDate = [];\n\n        prev.subtract( dayOfWeek + 1, 'day' );\n        for ( let i = dayOfWeek; i > 0; i-- ) {\n            setOfDate.push( prev.add( 1, 'day' ).clone() );\n        }\n\n        return setOfDate;\n    };\n\n    nextMonth = date => {\n        let next = moment( date )\n            .add( 1, 'month' )\n            .subtract( 1, 'day' );\n\n        const dayOfWeek = next.day();\n        const setOfDate = [];\n\n        for ( let i = dayOfWeek; i < 6; i++ ) {\n            setOfDate.push( next.add( 1, 'day' ).clone() );\n        }\n        return setOfDate;\n    };\n\n    componentDidMount() {\n        this.createItem();\n    }\n\n    componentDidUpdate( prevProp, prevState ) {\n        if ( prevState.currentDate.format( 'YYYY/MM/DD' ) != this.state.currentDate.format( 'YYYY/MM/DD' ) )\n            {this.createItem();}\n    }\n\n    createItem = () => {\n        const current = this.currentMonth( this.state.currentDate );\n        const prev = this.previousMonth( this.state.currentDate );\n        const next = this.nextMonth( this.state.currentDate );\n\n        const sum = [ ...[], ...prev, ...current, ...next ];\n        this.setState( {\n            setOfDate: sum\n        } );\n    }\n\n  changeMonth = step => {\n      let currentDate = this.state.currentDate.clone();\n      if ( step < 0 ) {\n          currentDate.subtract( 1, 'month' );\n      } else {\n          currentDate.add( 1, 'month' );\n      }\n      this.setState( {\n          currentDate\n      } );\n  }\n\n  render() {\n      return (\n          <div className=\"container\">\n              <button\n                  type=\"button\"\n                  onClick={() => this.changeMonth( -1 )}>\n            prev\n              </button>\n              <button\n                  onClick={() => this.changeMonth( 1 )}\n                  type=\"button\">next</button>\n              <p className=\"indicator\">{this.state.currentDate.format( 'MMMM-YY' )} </p>\n              <div className=\"calendar\">\n                  {\n                      this.state.label.map( l => ( <div className=\"calendar__item calendar__item--header\">{l}</div> )\n                      )\n                  }\n                  {\n                      this.state.setOfDate.map( day => ( <div className={ classNames( {\n                          'calendar__item': true,\n                          'calendar__item--today': this.isToday( day )\n                      } )}>{day.format( 'D' )}</div> )\n                      )\n                  }\n              </div>\n          </div>\n      );\n  }\n}\n\nReactDOM.render( <Calendar />, document.getElementById( 'root' ) );\n"]},"metadata":{},"sourceType":"module"}